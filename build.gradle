
plugins {
    id 'java' // 자바 프로젝트로 인식
    id 'org.springframework.boot' version '3.3.13' // 스프링 부트 플러그인
    id 'io.spring.dependency-management' version '1.1.7' // 의존성 버전 일괄 관리
    id 'jacoco'
}

group = 'com.user-service' // 프로젝트 그룹(패키지 네임)
version = '0.0.1-SNAPSHOT' // 프로젝트 버전

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // 자바 17 사용
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor // annotationProcessor도 compileOnly에 포함
    }
}

// 의존성 저장소 설정 (중앙 저장소 사용)
repositories {
    mavenCentral()
}

// 프로젝트에서 사용할 외부 변수(버전) 선언
ext {
    set('sentryVersion', "8.13.2") // Sentry 버전 변수
    set('springCloudVersion', "2023.0.5") // Spring Cloud BOM 버전 변수
}

dependencies {
    // ====== 모니터링 및 장애 추적 ======
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // 모니터링/헬스체크
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta' // Sentry 연동 (에러 트래킹)
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // ====== 웹 및 REST API ======
    implementation 'org.springframework.boot:spring-boot-starter-web' // 웹 MVC (REST API)
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Bean Validation

    // ====== 데이터베이스 및 JPA ======
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA (DB 연동)
    runtimeOnly 'org.postgresql:postgresql' // PostgreSQL JDBC 드라이버

    // ====== 메시징 및 AMQP ======
    implementation 'org.springframework.boot:spring-boot-starter-amqp' // RabbitMQ 연동

    // ====== 클라우드/마이크로서비스 연동 ======
    implementation 'org.springframework.cloud:spring-cloud-starter-config' // Spring Cloud Config 클라이언트
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' // Eureka 서비스 디스커버리 클라이언트
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign' // OpenFeign (HTTP 클라이언트)

    // ====== 인증/인가 연동 ======
    implementation 'org.keycloak:keycloak-admin-client:26.0.5'


    // ===== 캐싱 ====
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // ===== s3 ====
    implementation platform('software.amazon.awssdk:bom:2.27.21') // 최신 버전은 Maven Central에서 확인
    implementation 'software.amazon.awssdk:s3'

    // ===== jwt ====
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5' // JSON 변환을 위해 필요

    // ====== 개발 편의성 ======
    compileOnly 'org.projectlombok:lombok' // Lombok (컴파일 시에만 필요)
    annotationProcessor 'org.projectlombok:lombok' // Lombok 애노테이션 프로세서
    developmentOnly 'org.springframework.boot:spring-boot-devtools' // 개발용 자동 리로드

    // ====== 테스트 ======
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // 테스트용 스프링 부트 스타터
    testImplementation 'org.springframework.amqp:spring-rabbit-test' // RabbitMQ 테스트 유틸리티
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit 플랫폼 런처 (테스트 실행)
}

// 의존성 버전 일괄 관리(BOM) 설정
dependencyManagement {
    imports {
        mavenBom "io.sentry:sentry-bom:${sentryVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// 테스트 실행 시 JUnit Platform 사용
tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport' // 테스트 후 리포트 생성
}

jacocoTestReport {
    reports {
        html.required = true // HTML 리포트 생성
        xml.required = false
        csv.required = false
    }
}
