{
  "info": {
    "name": "Rebook User Service API",
    "description": "API collection for Rebook User Service - 사용자 관리 및 인증 서비스 API 명세서",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "인증/인가 API",
      "description": "Authentication and Authorization APIs",
      "item": [
        {
          "name": "테스트",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auths/test",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auths", "test"]
            },
            "description": "API 연결 테스트"
          },
          "response": []
        },
        {
          "name": "로그인",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"accessToken\": \"keycloak_access_token_here\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auths/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auths", "login"]
            },
            "description": "Keycloak 액세스 토큰으로 로그인하여 내부 JWT 토큰 획득"
          },
          "response": []
        },
        {
          "name": "토큰 리프레시",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auths/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auths", "refresh"]
            },
            "description": "리프레시 토큰으로 새로운 액세스 토큰 발급"
          },
          "response": []
        }
      ]
    },
    {
      "name": "유저 관리 API",
      "description": "User Management APIs",
      "item": [
        {
          "name": "유저 조회",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-User-Id",
                "value": "{{userId}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "현재 사용자 정보 조회"
          },
          "response": []
        },
        {
          "name": "유저 수정",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "X-User-Id",
                "value": "{{userId}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "email",
                  "value": "user@example.com",
                  "type": "text",
                  "description": "사용자 이메일 (필수)"
                },
                {
                  "key": "nickname",
                  "value": "새로운닉네임",
                  "type": "text",
                  "description": "사용자 닉네임 (3-20자, 필수)"
                },
                {
                  "key": "profileImage",
                  "type": "file",
                  "description": "프로필 이미지 파일 (선택)"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "사용자 정보 수정 (이메일, 닉네임, 프로필 이미지)"
          },
          "response": []
        },
        {
          "name": "유저 삭제",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-User-Id",
                "value": "{{userId}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "사용자 계정 삭제"
          },
          "response": []
        },
        {
          "name": "비밀번호 수정",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "X-User-Id",
                "value": "{{userId}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"newPassword123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "me"]
            },
            "description": "사용자 비밀번호 변경"
          },
          "response": []
        },
        {
          "name": "선호 카테고리 목록 조회",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-User-Id",
                "value": "{{userId}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "categories"]
            },
            "description": "사용자의 선호 카테고리 목록 조회"
          },
          "response": []
        },
        {
          "name": "추천 카테고리 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/categories/recommendations/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "categories", "recommendations", "{{userId}}"]
            },
            "description": "특정 사용자의 추천 카테고리 조회"
          },
          "response": []
        }
      ]
    },
    {
      "name": "선호 카테고리 API",
      "description": "Favorite Category APIs",
      "item": [
        {
          "name": "선호 카테고리 등록",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-User-Id",
                "value": "{{userId}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"categories\": [\"소설\", \"에세이\", \"자기계발\"]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "categories"]
            },
            "description": "사용자의 선호 카테고리 등록"
          },
          "response": []
        }
      ]
    },
    {
      "name": "유저 조회 API (타서비스용)",
      "description": "User Reader APIs for other services",
      "item": [
        {
          "name": "유저 이름 조회",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userIds\": [\"user1\", \"user2\", \"user3\"]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/authors",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "authors"]
            },
            "description": "여러 사용자 ID로 사용자명 목록 조회 (타서비스용)"
          },
          "response": []
        },
        {
          "name": "카테고리별 유저 ID 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/alarms/books?category=소설",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "alarms", "books"],
              "query": [
                {
                  "key": "category",
                  "value": "소설",
                  "description": "카테고리명"
                }
              ]
            },
            "description": "특정 카테고리를 선호하는 사용자 ID 목록 조회 (알림용)"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "// 로그인 API 응답에서 토큰 자동 저장",
          "if (pm.info.requestName === '로그인') {",
          "    pm.sendRequest({",
          "        url: pm.variables.get('baseUrl') + '/api/auths/login',",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                accessToken: pm.variables.get('keycloakToken')",
          "            })",
          "        }",
          "    }, function (err, response) {",
          "        if (response && response.json() && response.json().data) {",
          "            pm.environment.set('accessToken', response.json().data.accessToken);",
          "            pm.environment.set('refreshToken', response.json().data.refreshToken);",
          "        }",
          "    });",
          "}"
        ],
        "type": "text/javascript"
      }
    },
    {
      "listen": "test",
      "script": {
        "exec": [
          "// 로그인 응답에서 토큰 자동 저장",
          "if (pm.info.requestName === '로그인' && pm.response.code === 200) {",
          "    const responseJson = pm.response.json();",
          "    if (responseJson.data) {",
          "        pm.environment.set('accessToken', responseJson.data.accessToken);",
          "        pm.environment.set('refreshToken', responseJson.data.refreshToken);",
          "        console.log('토큰이 환경변수에 저장되었습니다.');",
          "    }",
          "}",
          "",
          "// 리프레시 응답에서 새 액세스 토큰 저장",
          "if (pm.info.requestName === '토큰 리프레시' && pm.response.code === 200) {",
          "    const responseJson = pm.response.json();",
          "    if (responseJson.data) {",
          "        pm.environment.set('accessToken', responseJson.data.accessToken);",
          "        console.log('새 액세스 토큰이 환경변수에 저장되었습니다.');",
          "    }",
          "}",
          "",
          "// 공통 응답 검증",
          "pm.test('응답 상태 코드 확인', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
          "});",
          "",
          "pm.test('응답 시간 확인', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('응답 형식 확인', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});"
        ],
        "type": "text/javascript"
      }
    }
  ]
}